!(function (e) {
  var n = "a. b. c. d.".split(" "),
    i = function (e, t, o, a) {
      return {
        url: ["http://{S}tile.stamen.com/", e, "/{Z}/{X}/{Y}.", t].join(""),
        type: t,
        subdomains: n.slice(),
        minZoom: o,
        maxZoom: a,
        attribution: [
         'Stamen'
        ].join(""),
      };
    },
    s = {
      toner: i("toner", "png", 0, 20),
      terrain: i("terrain", "png", 0, 18),
      "terrain-classic": i("terrain-classic", "png", 0, 18),
      watercolor: i("watercolor", "jpg", 1, 18),
      "trees-cabs-crime": {
        url:
          "http://{S}.tiles.mapbox.com/v3/stamen.trees-cabs-crime/{Z}/{X}/{Y}.png",
        type: "png",
        subdomains: "a b c d".split(" "),
        minZoom: 11,
        maxZoom: 18,
        extent: [
          { lat: 37.853, lon: -122.577 },
          { lat: 37.684, lon: -122.313 },
        ],
        attribution: [
          'Design by Shawn Allen at <a href="http://stamen.com/">Stamen</a>.',
          'Data courtesy of <a href="http://fuf.net/">FuF</a>,',
          '<a href="http://www.yellowcabsf.com/">Yellow Cab</a>',
          '&amp; <a href="http://sf-police.org/">SFPD</a>.',
        ].join(" "),
      },
    };
  (s["terrain-classic"].url =
    "http://{S}tile.stamen.com/terrain/{Z}/{X}/{Y}.png"),
    p("toner", ["hybrid", "labels", "lines", "background", "lite"]),
    p("terrain", ["background", "labels", "lines"]),
    m("toner", ["2010"]),
    m("toner", ["2011", "2011-lines", "2011-labels", "2011-lite"]);
  for (
    var t,
      o,
      a = [
        "toner",
        "toner-hybrid",
        "toner-labels",
        "toner-lines",
        "toner-background",
        "toner-lite",
        "terrain",
        "terrain-background",
        "terrain-lines",
        "terrain-labels",
        "terrain-classic",
      ],
      r = 0;
    r < a.length;
    r++
  ) {
    var l = a[r];
    (s[l].retina = !0),
      (s[l].attribution = [
        'Map tiles by <a href="http://stamen.com/">Stamen Design</a>, ',
        'under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. ',
        'Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, ',
        'under <a href="http://www.openstreetmap.org/copyright">ODbL</a>.',
      ].join(""));
  }
  function m(e, t) {
    for (var o = c(e), a = 0; a < t.length; a++) {
      var n = [e, t[a]].join("-");
      (s[n] = i(n, o.type, o.minZoom, o.maxZoom)), (s[n].deprecated = !0);
    }
  }
  function p(e, t, o) {
    for (var a = c(e), n = 0; n < t.length; n++) {
      var r = [e, t[n]].join("-");
      s[r] = i(r, o || a.type, a.minZoom, a.maxZoom);
    }
  }
  function c(e) {
    if (e in s) {
      var t = s[e];
      return (
        t.deprecated &&
          console &&
          console.warn &&
          console.warn(
            e +
              " is a deprecated style; it will be redirected to its replacement. For performance improvements, please change your reference."
          ),
        t
      );
    }
    throw "No such provider (" + e + ")";
  }
  if (
    ((e.stamen = e.stamen || {}),
    (e.stamen.tile = e.stamen.tile || {}),
    (e.stamen.tile.providers = s),
    (e.stamen.tile.getProvider = c),
    "object" == typeof MM)
  ) {
    var u =
      "function" == typeof MM.Template ? MM.Template : MM.TemplatedMapProvider;
    (MM.StamenTileLayer = function (e) {
      var t = c(e);
      (this._provider = t),
        MM.Layer.call(this, new u(t.url, t.subdomains)),
        this.provider.setZoomRange(t.minZoom, t.maxZoom),
        (this.attribution = t.attribution);
    }),
      (MM.StamenTileLayer.prototype = {
        setCoordLimits: function (e) {
          var t = this._provider;
          return (
            !!t.extent &&
            ((e.coordLimits = [
              e.locationCoordinate(t.extent[0]).zoomTo(t.minZoom),
              e.locationCoordinate(t.extent[1]).zoomTo(t.maxZoom),
            ]),
            !0)
          );
        },
      }),
      MM.extend(MM.StamenTileLayer, MM.Layer);
  }
  if (
    ("object" == typeof L &&
      ((L.StamenTileLayer = L.TileLayer.extend({
        initialize: function (e, t) {
          var o = c(e),
            a = o.url.replace(/({[A-Z]})/g, function (e) {
              return e.toLowerCase();
            }),
            n = L.Util.extend({}, t, {
              minZoom: o.minZoom,
              maxZoom: o.maxZoom,
              subdomains: o.subdomains,
              scheme: "xyz",
              attribution: o.attribution,
              sa_id: e,
            });
          L.TileLayer.prototype.initialize.call(this, a, n);
        },
      })),
      (L.stamenTileLayer = function (e, t) {
        return new L.StamenTileLayer(e, t);
      })),
    "object" == typeof OpenLayers)
  ) {
    function y(e) {
      return e.replace(/({.})/g, function (e) {
        return "$" + e.toLowerCase();
      });
    }
    OpenLayers.Layer.Stamen = OpenLayers.Class(OpenLayers.Layer.OSM, {
      initialize: function (e, t) {
        var o = c(e),
          a = o.url,
          n = o.subdomains,
          r = [];
        if (-1 < a.indexOf("{S}"))
          for (var i = 0; i < n.length; i++) r.push(y(a.replace("{S}", n[i])));
        else r.push(y(a));
        return (
          (t = OpenLayers.Util.extend(
            {
              numZoomLevels: o.maxZoom,
              buffer: 0,
              transitionEffect: "resize",
              tileOptions: { crossOriginKeyword: null },
              attribution: o.attribution,
            },
            t
          )),
          OpenLayers.Layer.OSM.prototype.initialize.call(this, e, r, t)
        );
      },
    });
  }
  "object" == typeof google &&
    "object" == typeof google.maps &&
    ((google.maps.ImageMapType =
      ((t = google.maps.ImageMapType),
      ((o = function () {
        arguments.length && t.apply(this, arguments);
      }).prototype = t.prototype),
      o)),
    (google.maps.StamenMapType = function (e) {
      var s = c(e),
        l = s.subdomains;
      return google.maps.ImageMapType.call(this, {
        getTileUrl: function (e, t) {
          var o = 1 << t,
            a = e.x % o,
            n = a < 0 ? a + o : a,
            r = e.y,
            i = (t + n + r) % l.length;
          return s.url
            .replace("{S}", l[i])
            .replace("{Z}", t)
            .replace("{X}", n)
            .replace("{Y}", r);
        },
        tileSize: new google.maps.Size(256, 256),
        name: e,
        minZoom: s.minZoom,
        maxZoom: s.maxZoom,
      });
    }),
    (google.maps.StamenMapType.prototype = new google.maps.ImageMapType()));
})("undefined" == typeof exports ? this : exports);

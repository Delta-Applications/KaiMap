/*!
 * EventEmitter v4.2.9 - git.io/ee
 * Oliver Caldwell
 * MIT license
 * @preserve
 */
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp)for(n in t={},r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n]);else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&-1===t(i[r],n)&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&-1!==(r=t(s[i],n))&&s[i].splice(r,1);return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s=this.getListenersAsObject(e);for(i in s)if(s.hasOwnProperty(i))for(r=s[i].length;r--;)!0===(n=s[i][r]).once&&this.removeListener(e,n.listener),n.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,n.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define((function(){return e})):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/**
 * @file
 * File picker and finder for device storages on Firefox OS devices
 *
 * This library provides an easy-to-use asynchronous interface for other Firefox OS apps to search for files
 * on Firefox OS devices. The library is based on an event-based architecture, letting developers build
 * beautiful asynchronous API for their apps.
 *
 * The `Finder` library is best used by developers looking to pick a file from the `sdcard` for their apps.
 *
 * This library depends on [EventEmitter](https://github.com/Wolfy87/EventEmitter) by Wolfy87, included with the
 * package.
 *
 * @version 1.1.3
 * @license The MIT License (MIT)
 * @author Applait Technologies LLP
 * @copyright Copyright (c) 2014 Applait Technologies LLP
 */
var Applait=Applait||{};Applait.Finder=function(e){this.options=e||{},this.type=this.options.type||"sdcard",this.hidden=this.options.hidden||!1,this.casesensitive=this.options.caseSensitive||!1,this.minsearchlength=this.options.minSearchLength&&"number"==typeof this.options.minSearchLength?e.minSearchLength:3,this.debugmode=!!this.options.debugMode,this.storages=navigator.getDeviceStorages&&navigator.getDeviceStorages(this.type),this.searchcompletecount=0,this.filematchcount=0,this.searchkey=""},Applait.Finder.prototype=new EventEmitter,Applait.Finder.prototype.checkhidden=function(e){return"/"!==e[e.indexOf(".")-1]||!0===this.hidden},Applait.Finder.prototype.search=function(e){var t=this;return t.reset(),t.searchkey=t.casesensitive?e.trim():e.trim().toLowerCase(),t.searchkey.length<t.minsearchlength?(t.log("searchCancelled",["Search string should be at least "+t.minsearchlength+" characters"]),t.emitEvent("searchCancelled",["Search string should be at least "+t.minsearchlength+" characters"]),null):t.storagecount()<1?(t.log("empty",[t.searchkey]),t.emitEvent("empty",[t.searchkey]),null):(t.log("searchBegin",[t.searchkey]),t.emitEvent("searchBegin",[t.searchkey]),void t.storages.forEach((function(e){var n=e.enumerate();t.log("storageSearchBegin",[e.storageName,t.searchkey]),t.emitEvent("storageSearchBegin",[e.storageName,t.searchkey]),n.onsuccess=function(){if(this.result){var n=this.result,r=t.splitname(n.name);t.matchname(r.name,n.name)&&(t.filematchcount++,t.log("fileFound",[n,r,e.storageName]),t.emitEvent("fileFound",[n,r,e.storageName])),this.done?(t.searchcompletecount++,t.log("storageSearchComplete",[e.storageName,t.searchkey]),t.emitEvent("storageSearchComplete",[e.storageName,t.searchkey])):this.continue()}else t.searchcompletecount++,t.log("storageSearchComplete",[e.storageName,t.searchkey]),t.emitEvent("storageSearchComplete",[e.storageName,t.searchkey]);t.searchcompletecount===t.storagecount()&&(t.log("searchComplete",[t.searchkey,t.filematchcount]),t.emitEvent("searchComplete",[t.searchkey,t.filematchcount]))},n.onerror=function(){t.log("error",["Error accessing device storage '"+e.storageName+"'",this.error]),t.emitEvent("error",["Error accessing device storage '"+e.storageName+"'",this.error])}})))},Applait.Finder.prototype.splitname=function(e){return{name:(e=e.split(/[\\/]/)).pop(),path:e.join("/")}},Applait.Finder.prototype.storagecount=function(){return this.storages&&this.storages.length?this.storages.length:0},Applait.Finder.prototype.reset=function(){this.filematchcount=0,this.searchcompletecount=0,this.searchkey=""},Applait.Finder.prototype.log=function(e,t){this.debugmode&&console.log(e,t)},Applait.Finder.prototype.matchname=function(e,t){return(e=this.casesensitive?e.trim():e.trim().toLowerCase()).indexOf(this.searchkey)>-1&&this.checkhidden(t)};
